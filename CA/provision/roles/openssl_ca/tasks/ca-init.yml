- name: "Ensure openssl is installed"
  apt: name=openssl state=latest

- name: "Delete ca-certs directory"
  file:
    path: "{{ item }}"
    state: absent
    owner: root
    group: root
  with_items:
  - "{{ ca_certs_dir }}"
- name: "Make configuration directory"
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
  with_items:
  - "{{ ca_certs_dir }}"

- name: "Deploy configuration items"
  template:
    src: "{{ item }}.j2"
    dest: "{{ ca_certs_dir }}/{{ item }}"
    owner: root
    group: root
  with_items:
          - serial
          - ca.conf

- name: "Generate private key"
  shell: 'openssl genrsa -out {{ ca_key }} 2048'
  args:
    chdir: "{{ ca_certs_dir }}"

- name: "Config CA"
  set_fact:
    ca_subject: '/C=ES/ST=Spain/L=Barcelona/O=Test/OU=IT/CN=ca/emailAddress=ca-admin@ca'


- name: "Create root CA files"
  shell: 'openssl req -new -x509 -key {{ ca_key }} -out {{ ca_cert }} -subj "{{ ca_subject }}"'
  args:
    chdir: "{{ ca_certs_dir }}"

- name: "Generate CSR for the CA"
  shell: 'openssl req -subj "{{ ca_subject }}" -new -key "{{ ca_key }}" -out "{{ item }}".csr'
  args:
    chdir: "{{ ca_certs_dir }}"
  with_inventory_hostnames: cag

- name: "Generate certificate and sign it by the CA"
  shell: 'openssl x509 -req -days 1825 -in "{{ item }}".csr -CA {{ ca_cert }} -CAkey {{ ca_key }} -CAcreateserial -out "{{ item }}"-cert.pem -extensions v3_req -extfile /usr/lib/ssl/openssl.cnf'
  args:
   chdir: "{{ ca_certs_dir }}"
  with_inventory_hostnames: cag

